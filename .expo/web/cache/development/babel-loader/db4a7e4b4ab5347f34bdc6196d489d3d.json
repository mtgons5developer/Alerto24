{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React from \"react\";\nimport { useFormikContext } from \"formik\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport ImageInputList from \"../ImageInputList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction FormImagePicker(_ref) {\n  var name = _ref.name;\n\n  var _useFormikContext = useFormikContext(),\n      errors = _useFormikContext.errors,\n      setFieldValue = _useFormikContext.setFieldValue,\n      touched = _useFormikContext.touched,\n      values = _useFormikContext.values;\n\n  var imageUris = values[name];\n\n  var handleAdd = function handleAdd(uri) {\n    setFieldValue(name, [].concat(_toConsumableArray(imageUris), [uri]));\n  };\n\n  var handleRemove = function handleRemove(uri) {\n    setFieldValue(name, imageUris.filter(function (imageUri) {\n      return imageUri !== uri;\n    }));\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(ImageInputList, {\n      imageUris: imageUris,\n      onAddImage: handleAdd,\n      onRemoveImage: handleRemove\n    }), _jsx(ErrorMessage, {\n      error: errors[name],\n      visible: touched[name]\n    })]\n  });\n}\n\nexport default FormImagePicker;","map":{"version":3,"sources":["/Users/macbookpro/MobileApp/school_app_react_native/app/components/forms/FormImagePicker.js"],"names":["React","useFormikContext","ErrorMessage","ImageInputList","FormImagePicker","name","errors","setFieldValue","touched","values","imageUris","handleAdd","uri","handleRemove","filter","imageUri"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,QAAjC;AAEA,OAAOC,YAAP;AACA,OAAOC,cAAP;;;;;AAEA,SAASC,eAAT,OAAmC;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAC/B,0BAAmDJ,gBAAgB,EAAnE;AAAA,MAAQK,MAAR,qBAAQA,MAAR;AAAA,MAAgBC,aAAhB,qBAAgBA,aAAhB;AAAA,MAA+BC,OAA/B,qBAA+BA,OAA/B;AAAA,MAAwCC,MAAxC,qBAAwCA,MAAxC;;AACA,MAAMC,SAAS,GAAGD,MAAM,CAACJ,IAAD,CAAxB;;AAEA,MAAMM,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAS;AACvBL,IAAAA,aAAa,CAACF,IAAD,+BAAWK,SAAX,IAAsBE,GAAtB,GAAb;AACH,GAFD;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACD,GAAD,EAAS;AAC1BL,IAAAA,aAAa,CACTF,IADS,EAETK,SAAS,CAACI,MAAV,CAAiB,UAACC,QAAD;AAAA,aAAcA,QAAQ,KAAKH,GAA3B;AAAA,KAAjB,CAFS,CAAb;AAIH,GALD;;AAOA,SACI;AAAA,eACI,KAAC,cAAD;AACI,MAAA,SAAS,EAAEF,SADf;AAEI,MAAA,UAAU,EAAEC,SAFhB;AAGI,MAAA,aAAa,EAAEE;AAHnB,MADJ,EAMI,KAAC,YAAD;AAAc,MAAA,KAAK,EAAEP,MAAM,CAACD,IAAD,CAA3B;AAAmC,MAAA,OAAO,EAAEG,OAAO,CAACH,IAAD;AAAnD,MANJ;AAAA,IADJ;AAUH;;AAED,eAAeD,eAAf","sourcesContent":["import React from \"react\";\nimport { useFormikContext } from \"formik\";\n\nimport ErrorMessage from \"./ErrorMessage\";\nimport ImageInputList from \"../ImageInputList\";\n\nfunction FormImagePicker({ name }) {\n    const { errors, setFieldValue, touched, values } = useFormikContext();\n    const imageUris = values[name];\n\n    const handleAdd = (uri) => {\n        setFieldValue(name, [...imageUris, uri]);\n    };\n\n    const handleRemove = (uri) => {\n        setFieldValue(\n            name,\n            imageUris.filter((imageUri) => imageUri !== uri)\n        );\n    };\n\n    return (\n        <>\n            <ImageInputList\n                imageUris={imageUris}\n                onAddImage={handleAdd}\n                onRemoveImage={handleRemove}\n            />\n            <ErrorMessage error={errors[name]} visible={touched[name]} />\n        </>\n    );\n}\n\nexport default FormImagePicker;\n"]},"metadata":{},"sourceType":"module"}