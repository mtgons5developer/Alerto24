{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as Yup from \"yup\";\nimport Screen from \"../components/Screen\";\nimport { Form, FormField, SubmitButton } from \"../components/forms\";\nimport { AsyncStorage } from '@react-native-async-storage/async-storage';\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { AlertIOS } from \"react-native-web/dist/index\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCEjcCPhzeEtj9Tp_MDZM3waHxM97JeahM\",\n  authDomain: \"schooapp2022.firebaseapp.com\",\n  databaseURL: \"https://schooapp2022-default-rtdb.firebaseio.com\",\n  projectId: \"schooapp2022\",\n  storageBucket: \"schooapp2022.appspot.com\",\n  messagingSenderId: \"26197024544\",\n  appId: \"1:26197024544:web:209e7d360fb391cc3ac145\",\n  measurementId: \"G-74SZW3KGPH\"\n};\nvar app = initializeApp(firebaseConfig);\nvar auth = getAuth(app);\nvar validationSchema = Yup.object().shape({\n  email: Yup.string().required().email().label(\"Email\"),\n  password: Yup.string().required().min(4).label(\"Password\")\n});\n\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  setTimeout(function (params) {\n    navigation.navigate('Dashboard');\n  }, 100);\n  return _jsxs(Screen, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      style: styles.logo,\n      source: require(\"../assets/logo-red.png\")\n    }), _jsxs(Form, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: function onSubmit(values) {\n        return onFormSubmit(values);\n      },\n      validationSchema: validationSchema,\n      children: [_jsx(FormField, {\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        icon: \"email\",\n        keyboardType: \"email-address\",\n        name: \"email\",\n        placeholder: \"Email\",\n        textContentType: \"emailAddress\"\n      }), _jsx(FormField, {\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        icon: \"lock\",\n        name: \"password\",\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        textContentType: \"password\"\n      }), _jsx(SubmitButton, {\n        title: \"Login\"\n      })]\n    })]\n  });\n\n  function onFormSubmit(values) {\n    signInWithEmailAndPassword(auth, values.email, values.password).then(function (response) {\n      navigation.navigate('Dashboard');\n    }).catch(function (err) {\n      var msg = 'Invalid Email or Password. Please Try Again';\n\n      if (Platform.OS === 'android') {\n        ToastAndroid.show(msg, ToastAndroid.SHORT);\n      } else {\n        alert(msg);\n      }\n    });\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    alignSelf: \"center\",\n    marginTop: 50,\n    marginBottom: 20\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/macbookpro/MobileApp/school_app_react_native/app/screens/LoginScreen.js"],"names":["React","Yup","Screen","Form","FormField","SubmitButton","AsyncStorage","AlertIOS","initializeApp","getAuth","signInWithEmailAndPassword","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","validationSchema","object","shape","email","string","required","label","password","min","LoginScreen","navigation","setTimeout","params","navigate","styles","container","logo","require","values","onFormSubmit","then","response","catch","err","msg","Platform","OS","ToastAndroid","show","SHORT","alert","StyleSheet","create","padding","width","height","alignSelf","marginTop","marginBottom"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAOC,MAAP;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,YAA1B;AACA,SAASC,YAAT,QAA6B,2CAA7B;;;SAKEC,Q;AAGF,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,OAAT,EAAkBC,0BAAlB,QAAoD,eAApD;;;AAMA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,8BAFS;AAGrBC,EAAAA,WAAW,EAAE,kDAHQ;AAIrBC,EAAAA,SAAS,EAAE,cAJU;AAKrBC,EAAAA,aAAa,EAAE,0BALM;AAMrBC,EAAAA,iBAAiB,EAAE,aANE;AAOrBC,EAAAA,KAAK,EAAE,0CAPc;AAQrBC,EAAAA,aAAa,EAAE;AARM,CAAvB;AAYA,IAAMC,GAAG,GAAGZ,aAAa,CAACG,cAAD,CAAzB;AACA,IAAMU,IAAI,GAAGZ,OAAO,CAACW,GAAD,CAApB;AAGA,IAAME,gBAAgB,GAAGrB,GAAG,CAACsB,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,EAAAA,KAAK,EAAExB,GAAG,CAACyB,MAAJ,GAAaC,QAAb,GAAwBF,KAAxB,GAAgCG,KAAhC,CAAsC,OAAtC,CADmC;AAE1CC,EAAAA,QAAQ,EAAE5B,GAAG,CAACyB,MAAJ,GAAaC,QAAb,GAAwBG,GAAxB,CAA4B,CAA5B,EAA+BF,KAA/B,CAAqC,UAArC;AAFgC,CAAnB,CAAzB;;AAKA,SAASG,WAAT,OAAqC;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACrCC,EAAAA,UAAU,CAAC,UAAUC,MAAV,EAAkB;AAC3BF,IAAAA,UAAU,CAACG,QAAX,CAAoB,WAApB;AAED,GAHS,EAGR,GAHQ,CAAV;AAIE,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAEC,MAAM,CAACC,SAAtB;AAAA,eACE,KAAC,KAAD;AAAO,MAAA,KAAK,EAAED,MAAM,CAACE,IAArB;AAA2B,MAAA,MAAM,EAAEC,OAAO;AAA1C,MADF,EAGE,MAAC,IAAD;AACE,MAAA,aAAa,EAAE;AAAEd,QAAAA,KAAK,EAAE,EAAT;AAAaI,QAAAA,QAAQ,EAAE;AAAvB,OADjB;AAEE,MAAA,QAAQ,EAAE,kBAACW,MAAD;AAAA,eAAYC,YAAY,CAACD,MAAD,CAAxB;AAAA,OAFZ;AAGE,MAAA,gBAAgB,EAAElB,gBAHpB;AAAA,iBAKE,KAAC,SAAD;AACE,QAAA,cAAc,EAAC,MADjB;AAEE,QAAA,WAAW,EAAE,KAFf;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,YAAY,EAAC,eAJf;AAKE,QAAA,IAAI,EAAC,OALP;AAME,QAAA,WAAW,EAAC,OANd;AAOE,QAAA,eAAe,EAAC;AAPlB,QALF,EAcE,KAAC,SAAD;AACE,QAAA,cAAc,EAAC,MADjB;AAEE,QAAA,WAAW,EAAE,KAFf;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,WAAW,EAAC,UALd;AAME,QAAA,eAAe,MANjB;AAOE,QAAA,eAAe,EAAC;AAPlB,QAdF,EAuBE,KAAC,YAAD;AAAc,QAAA,KAAK,EAAC;AAApB,QAvBF;AAAA,MAHF;AAAA,IADF;;AA+BA,WAASmB,YAAT,CAAsBD,MAAtB,EAA8B;AAG5B9B,IAAAA,0BAA0B,CAACW,IAAD,EAAOmB,MAAM,CAACf,KAAd,EAAqBe,MAAM,CAACX,QAA5B,CAA1B,CAAgEa,IAAhE,CAAsE,UAAUC,QAAV,EAAoB;AAGxFX,MAAAA,UAAU,CAACG,QAAX,CAAoB,WAApB;AAED,KALD,EAKGS,KALH,CAKU,UAAUC,GAAV,EAAe;AAGvB,UAAMC,GAAG,GAAG,6CAAZ;;AACA,UAAIC,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAC7BC,QAAAA,YAAY,CAACC,IAAb,CAAkBJ,GAAlB,EAAuBG,YAAY,CAACE,KAApC;AACD,OAFD,MAEO;AAELC,QAAAA,KAAK,CAACN,GAAD,CAAL;AACD;AAEF,KAhBD;AAiBD;AACF;;AAED,IAAMV,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAC/BjB,EAAAA,SAAS,EAAE;AACTkB,IAAAA,OAAO,EAAE;AADA,GADoB;AAI/BjB,EAAAA,IAAI,EAAE;AACJkB,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,MAAM,EAAE,EAFJ;AAGJC,IAAAA,SAAS,EAAE,QAHP;AAIJC,IAAAA,SAAS,EAAE,EAJP;AAKJC,IAAAA,YAAY,EAAE;AALV;AAJyB,CAAlB,CAAf;AAaA,eAAe7B,WAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Image } from \"react-native\";\nimport * as Yup from \"yup\";\n\nimport Screen from \"../components/Screen\";\nimport { Form, FormField, SubmitButton } from \"../components/forms\";\nimport { AsyncStorage } from '@react-native-async-storage/async-storage';\n\nimport {\n  ToastAndroid,\n  Platform,\n  AlertIOS,\n} from 'react-native';\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCEjcCPhzeEtj9Tp_MDZM3waHxM97JeahM\",\n  authDomain: \"schooapp2022.firebaseapp.com\",\n  databaseURL: \"https://schooapp2022-default-rtdb.firebaseio.com\",\n  projectId: \"schooapp2022\",\n  storageBucket: \"schooapp2022.appspot.com\",\n  messagingSenderId: \"26197024544\",\n  appId: \"1:26197024544:web:209e7d360fb391cc3ac145\",\n  measurementId: \"G-74SZW3KGPH\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\n\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().required().email().label(\"Email\"),\n  password: Yup.string().required().min(4).label(\"Password\"),\n});\n\nfunction LoginScreen({ navigation }) {\nsetTimeout(function (params) {\n  navigation.navigate('Dashboard')\n\n},100)\n  return (\n    <Screen style={styles.container}>\n      <Image style={styles.logo} source={require(\"../assets/logo-red.png\")} />\n\n      <Form\n        initialValues={{ email: \"\", password: \"\" }}\n        onSubmit={(values) => onFormSubmit(values)}\n        validationSchema={validationSchema}\n      >\n        <FormField\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          icon=\"email\"\n          keyboardType=\"email-address\"\n          name=\"email\"\n          placeholder=\"Email\"\n          textContentType=\"emailAddress\"\n        />\n        <FormField\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          icon=\"lock\"\n          name=\"password\"\n          placeholder=\"Password\"\n          secureTextEntry\n          textContentType=\"password\"\n        />\n        <SubmitButton title=\"Login\" />\n      </Form>\n    </Screen>\n  );\n  function onFormSubmit(values) {\n    // alert('code changed');\n\n    signInWithEmailAndPassword(auth, values.email, values.password).then( function (response) {\n      // alert(JSON.stringify(response))\n     // await AsyncStorage.setItem('auth',response)\n      navigation.navigate('Dashboard')\n\n    }).catch( function (err) {\n     // await AsyncStorage.setItem('auth',null)\n\n      const msg = 'Invalid Email or Password. Please Try Again';\n      if (Platform.OS === 'android') {\n        ToastAndroid.show(msg, ToastAndroid.SHORT)\n      } else {\n        // AlertIOS.alert(msg);\n        alert(msg)\n      }\n\n    });\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    alignSelf: \"center\",\n    marginTop: 50,\n    marginBottom: 20,\n  },\n});\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}