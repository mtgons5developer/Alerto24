{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Yup from \"yup\";\nimport { Form, FormField, FormPicker as Picker, SubmitButton } from \"../components/forms\";\nimport CategoryPickerItem from \"../components/CategoryPickerItem\";\nimport Screen from \"../components/Screen\";\nimport FormImagePicker from \"../components/forms/FormImagePicker\";\nimport useLocation from \"../hooks/useLocation\";\nimport * as DocumentPicker from 'expo-document-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar validationSchema = Yup.object().shape({\n  title: Yup.string().required().min(1).label(\"Title\"),\n  price: Yup.number().required().min(1).max(10000).label(\"Price\"),\n  description: Yup.string().label(\"Description\"),\n  category: Yup.object().required().nullable().label(\"Category\"),\n  images: Yup.array().min(1, \"Please select at least one image.\")\n});\nvar categories = [{\n  backgroundColor: \"#fc5c65\",\n  icon: \"floor-lamp\",\n  label: \"Furniture\",\n  value: 1\n}, {\n  backgroundColor: \"#fd9644\",\n  icon: \"car\",\n  label: \"Cars\",\n  value: 2\n}, {\n  backgroundColor: \"#fed330\",\n  icon: \"camera\",\n  label: \"Cameras\",\n  value: 3\n}, {\n  backgroundColor: \"#26de81\",\n  icon: \"cards\",\n  label: \"Games\",\n  value: 4\n}, {\n  backgroundColor: \"#2bcbba\",\n  icon: \"shoe-heel\",\n  label: \"Clothing\",\n  value: 5\n}, {\n  backgroundColor: \"#45aaf2\",\n  icon: \"basketball\",\n  label: \"Sports\",\n  value: 6\n}, {\n  backgroundColor: \"#4b7bec\",\n  icon: \"headphones\",\n  label: \"Movies & Music\",\n  value: 7\n}, {\n  backgroundColor: \"#a55eea\",\n  icon: \"book-open-variant\",\n  label: \"Books\",\n  value: 8\n}, {\n  backgroundColor: \"#778ca3\",\n  icon: \"application\",\n  label: \"Other\",\n  value: 9\n}];\n\nfunction ListingEditScreen() {\n  var location = useLocation();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedVideo = _useState2[0],\n      setSelectedVideo = _useState2[1];\n\n  return _jsx(Screen, {\n    style: styles.container,\n    children: _jsxs(Form, {\n      initialValues: {\n        title: \"\",\n        price: \"\",\n        description: \"\",\n        category: null,\n        images: []\n      },\n      onSubmit: function onSubmit(values) {\n        return console.log(location);\n      },\n      validationSchema: validationSchema,\n      children: [_jsx(Button, {\n        onPress: pickVideo,\n        title: \"Choose Video\"\n      }), _jsx(FormField, {\n        maxLength: 255,\n        name: \"title\",\n        placeholder: \"Title\"\n      }), _jsx(FormField, {\n        keyboardType: \"numeric\",\n        maxLength: 8,\n        name: \"price\",\n        placeholder: \"Price\",\n        width: 120\n      }), _jsx(Picker, {\n        items: categories,\n        name: \"category\",\n        numberOfColumns: 3,\n        PickerItemComponent: CategoryPickerItem,\n        placeholder: \"Category\",\n        width: \"50%\"\n      }), _jsx(FormField, {\n        maxLength: 255,\n        multiline: true,\n        name: \"description\",\n        numberOfLines: 3,\n        placeholder: \"Description\"\n      }), _jsx(SubmitButton, {\n        title: \"Post\"\n      })]\n    })\n  });\n\n  function pickVideo() {\n    DocumentPicker.getDocumentAsync().then(function (res) {\n      setSelectedVideo(res);\n    }).catch(function (res) {\n      setSelectedVideo(null);\n    });\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10\n  }\n});\nexport default ListingEditScreen;","map":{"version":3,"sources":["/Users/macbookpro/MobileApp/school_app_react_native/app/screens/ListingEditScreen.js"],"names":["React","useState","useEffect","Yup","Form","FormField","FormPicker","Picker","SubmitButton","CategoryPickerItem","Screen","FormImagePicker","useLocation","DocumentPicker","validationSchema","object","shape","title","string","required","min","label","price","number","max","description","category","nullable","images","array","categories","backgroundColor","icon","value","ListingEditScreen","location","selectedVideo","setSelectedVideo","styles","container","values","console","log","pickVideo","getDocumentAsync","then","res","catch","StyleSheet","create","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, StyleSheet } from \"react-native\";\nimport * as Yup from \"yup\";\n\nimport {\n  Form,\n  FormField,\n  FormPicker as Picker,\n  SubmitButton,\n} from \"../components/forms\";\nimport CategoryPickerItem from \"../components/CategoryPickerItem\";\nimport Screen from \"../components/Screen\";\nimport FormImagePicker from \"../components/forms/FormImagePicker\";\nimport useLocation from \"../hooks/useLocation\";\nimport * as DocumentPicker from 'expo-document-picker';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required().min(1).label(\"Title\"),\n  price: Yup.number().required().min(1).max(10000).label(\"Price\"),\n  description: Yup.string().label(\"Description\"),\n  category: Yup.object().required().nullable().label(\"Category\"),\n  images: Yup.array().min(1, \"Please select at least one image.\"),\n});\n\nconst categories = [\n  {\n    backgroundColor: \"#fc5c65\",\n    icon: \"floor-lamp\",\n    label: \"Furniture\",\n    value: 1,\n  },\n  {\n    backgroundColor: \"#fd9644\",\n    icon: \"car\",\n    label: \"Cars\",\n    value: 2,\n  },\n  {\n    backgroundColor: \"#fed330\",\n    icon: \"camera\",\n    label: \"Cameras\",\n    value: 3,\n  },\n  {\n    backgroundColor: \"#26de81\",\n    icon: \"cards\",\n    label: \"Games\",\n    value: 4,\n  },\n  {\n    backgroundColor: \"#2bcbba\",\n    icon: \"shoe-heel\",\n    label: \"Clothing\",\n    value: 5,\n  },\n  {\n    backgroundColor: \"#45aaf2\",\n    icon: \"basketball\",\n    label: \"Sports\",\n    value: 6,\n  },\n  {\n    backgroundColor: \"#4b7bec\",\n    icon: \"headphones\",\n    label: \"Movies & Music\",\n    value: 7,\n  },\n  {\n    backgroundColor: \"#a55eea\",\n    icon: \"book-open-variant\",\n    label: \"Books\",\n    value: 8,\n  },\n  {\n    backgroundColor: \"#778ca3\",\n    icon: \"application\",\n    label: \"Other\",\n    value: 9,\n  },\n];\n\n\nfunction ListingEditScreen() {\n  const location = useLocation();\n  const [selectedVideo, setSelectedVideo] = useState();\n\n  // useEffect(() => {\n  //   console.log(selectedVideo)\n  // }, [selectedVideo]);\n\n  return (\n    <Screen style={styles.container}>\n      <Form\n        initialValues={{\n          title: \"\",\n          price: \"\",\n          description: \"\",\n          category: null,\n          images: [],\n        }}\n        onSubmit={(values) => console.log(location)}\n        validationSchema={validationSchema}\n      >\n        <Button onPress={pickVideo} title=\"Choose Video\" />\n        <FormField maxLength={255} name=\"title\" placeholder=\"Title\" />\n        <FormField\n          keyboardType=\"numeric\"\n          maxLength={8}\n          name=\"price\"\n          placeholder=\"Price\"\n          width={120}\n        />\n        <Picker\n          items={categories}\n          name=\"category\"\n          numberOfColumns={3}\n          PickerItemComponent={CategoryPickerItem}\n          placeholder=\"Category\"\n          width=\"50%\"\n        />\n        <FormField\n          maxLength={255}\n          multiline\n          name=\"description\"\n          numberOfLines={3}\n          placeholder=\"Description\"\n        />\n        <SubmitButton title=\"Post\" />\n      </Form>\n    </Screen>\n  );\n\n  function pickVideo() {\n    DocumentPicker.getDocumentAsync().then((res) => {\n      setSelectedVideo(res);\n    }).catch((res) => {\n      setSelectedVideo(null);\n\n    })\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n  },\n});\nexport default ListingEditScreen;\n"]},"metadata":{},"sourceType":"module"}